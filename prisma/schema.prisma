generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(cuid())

  Project  Project[]
  TilePage TilePage[]

  email            String  @unique
  name             String
  password         String?
  profileImgUrl    String?
  elevenLabsApiKey String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model TilePage {
  id String @id @default(cuid())

  tiles Tile[]

  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  Project   Project? @relation(fields: [projectId], references: [id], onDelete: Cascade)
  projectId String?

  name     String
  data     Json?
  isPublic Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Tile {
  id String @id @default(cuid())

  TilePage   TilePage @relation(fields: [tilePageId], references: [id], onDelete: Cascade)
  tilePageId String

  x               Int
  y               Int
  page            Int
  text            String @default("New tile")
  backgroundColor String @default("#fafafa")
  borderColor     String @default("#71717a")
  image           String @default("")
  navigation      String @default("")
  displayText     String @default("")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Project {
  id String @id @default(cuid())

  user   User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String
  pages  TilePage[]

  name        String
  description String?
  imageUrl    String?
  columns     Int     @default(6)
  rows        Int     @default(4)
  isPublic    Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
